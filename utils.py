import cv2
import matplotlib.pyplot as plt
import numpy as np
from tqdm import tqdm
from tenengrad import tenengrad_rgb
from film2image import film2image_list
from sharpness_comparison import get_sharpness_values


def test():
    # parameters
    video_name = 'P1500718'
    video_path = f'videos/{video_name}.MP4'
    sampling_interval = 1
    reverse = False  # whether to process the video in reverse order
    # load video
    vc = cv2.VideoCapture(video_path)
    frame_count = int(vc.get(cv2.CAP_PROP_FRAME_COUNT))
    sharpness_values = []

    # process video
    if reverse:
        start = frame_count
        end = 0
        sampling_interval *= -1
    else:
        start = 0
        end = frame_count

    for idx in tqdm(range(start, end, sampling_interval), desc='Processing frames'):
        vc.set(1, idx)
        ret, frame = vc.read()
        if frame is not None:
            sharpness = tenengrad_rgb(frame)
            sharpness_values.append(sharpness)

    plt.figure()
    plt.plot(sharpness_values, marker='o', linestyle='-', color='b')
    plt.title('Sharpness')
    plt.xlabel('Index')
    plt.ylabel('Value')
    plt.grid(True)
    plt.show()


def draw_curve(data):
    plt.figure()
    plt.plot(data, marker='o', linestyle='-', color='b')
    plt.title('Sharpness')
    plt.xlabel('Index')
    plt.ylabel('Value')
    plt.grid(True)
    plt.show()


if __name__ == '__main__':
    # parameters
    video_name = 'P1500718'
    video_path = f'videos/{video_name}.MP4'
    sampling_interval = 1

    # images = film2image_list(video_path, sampling_interval)
    # sharpness_values = get_sharpness_values(images)

    sharpness_values = [245.17250096450618, 244.63409336419753, 230.73448977623457, 228.74511574074074, 236.19727044753085, 231.56135127314815, 235.29757137345678, 235.03405767746915, 243.6979050925926, 245.15734760802468, 244.96559702932097, 256.91942997685186, 298.7012384259259, 297.10964216820986, 282.1291010802469, 274.17864197530866, 274.3817091049383, 290.71818672839504, 283.9845244984568, 284.9667660108025, 297.70758005401234, 285.02687114197533, 287.84680459104936, 316.3669000771605, 317.30413290895063, 317.3685628858025, 306.65737075617284, 297.4361477623457, 306.135496720679, 337.283197337963, 330.63072820216047, 342.24967592592594, 356.6338676697531, 350.36842496141975, 350.88026041666666, 364.1167582947531, 367.22917052469137, 369.97355902777775, 369.9874141589506, 366.7122145061728, 366.03781442901237, 392.06868730709874, 383.92760030864196, 399.3605063657407, 449.57869212962964, 445.0391222993827, 447.9044000771605, 525.2768287037037, 553.6830102237655, 563.7676494984568, 577.3289882330247, 577.0249006558641, 676.2267554012345, 792.5656558641975, 814.2164293981482, 817.0477469135802, 911.4018557098766, 1040.741925154321, 1267.6906288580246, 1338.3013300540124, 1794.9929205246913, 1839.9099758873456, 2221.8329668209876, 3120.407161458333, 3272.8937461419755, 3631.1733989197533, 3884.0712075617284, 3908.6373013117286, 3910.2867997685184, 3950.835506365741, 3992.342807677469, 4056.5251649305555, 4032.3868499228397, 4008.882990933642, 3995.643269675926, 3976.0814621913582, 3960.6880574845677, 3958.878949652778, 3914.1842496141976, 3882.619648919753, 3892.5650144675924, 3810.8551157407405, 3835.837717978395, 3909.6817226080248, 3807.9466493055556, 3781.7135069444444, 3732.351617476852, 3694.0785108024693, 3689.561662808642, 3754.4598697916667, 3830.341494020062, 3842.5755121527777, 3894.2548533950617, 3946.0634789737655, 4346.332414158951,
                        4309.703524305555, 4376.747448881173, 4485.58932966821, 4450.525029899692, 4582.9916222993825, 4736.810455246914, 5071.623361304012, 5211.791616512346, 5166.884663387345, 5273.3389737654325, 5146.642402584876, 4699.606895254629, 4669.665925925926, 4129.129014274691, 4079.3421875, 3688.7987461419752, 3690.744108796296, 3661.745620177469, 3600.206076388889, 3567.3063917824074, 3562.527751736111, 3549.9969782021603, 3493.894341242284, 3407.508402777778, 3411.728358410494, 3158.9049701003087, 2757.6747173996914, 2401.617906057099, 1950.0924951774691, 1860.3917332175927, 1566.8181327160494, 1203.3334799382717, 1025.6862287808642, 1032.3064052854938, 823.1511902006173, 749.0471759259259, 695.8921788194444, 635.9780719521605, 594.823521412037, 568.5478115354938, 508.60731963734565, 487.06898051697533, 480.1860079089506, 428.92220196759257, 415.27361014660494, 428.95862364969133, 391.54074845679014, 384.04824170524694, 401.943722029321, 368.631662808642, 361.2326427469136, 336.35304108796294, 318.6422974537037, 314.4711053240741, 328.45631172839506, 317.9856105324074, 314.07381847993827, 328.4748813657407, 316.7610329861111, 315.6437027391975, 327.31062789351853, 317.0063020833333, 309.9182638888889, 288.71827546296294, 273.23952256944443, 273.2962750771605, 290.62680941358025, 274.80722125771604, 273.8745360725309, 291.20629340277776, 280.56864583333333, 279.62283275462966, 296.05902199074075, 285.7750491898148, 283.86868055555556, 269.8851572145062, 263.59092013888886, 263.7034249614197, 278.9846981095679, 270.2237336033951, 269.71794945987654, 283.57413869598764, 275.8037962962963, 275.9985561342593, 289.44339602623455, 281.61370273919755, 282.82204282407406, 268.2998138503086, 264.2193663194444, 264.6306076388889, 276.5394926697531, 269.3013715277778, 270.1008159722222, 283.0003539737654, 269.0997617669753, 268.5844550540123, 290.5788175154321]

    draw_curve(np.diff(np.diff(sharpness_values)))
